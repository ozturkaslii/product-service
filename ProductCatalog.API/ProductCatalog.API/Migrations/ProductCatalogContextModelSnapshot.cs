// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProductCatalog.API.DbContexts;

namespace ProductCatalog.API.Migrations
{
    [DbContext(typeof(ProductCatalogContext))]
    partial class ProductCatalogContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProductCatalog.API.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<DateTimeOffset>("LastUpdated")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "C1476",
                            LastUpdated = new DateTimeOffset(new DateTime(2020, 1, 11, 20, 24, 31, 473, DateTimeKind.Unspecified).AddTicks(2751), new TimeSpan(0, 3, 0, 0, 0)),
                            Name = "Havana Light Grey Jacket",
                            Price = 399.0m
                        },
                        new
                        {
                            Id = 2,
                            Code = "P5752",
                            LastUpdated = new DateTimeOffset(new DateTime(2020, 1, 11, 20, 24, 31, 476, DateTimeKind.Unspecified).AddTicks(365), new TimeSpan(0, 3, 0, 0, 0)),
                            Name = "Lezio Mid Blue Check Suit",
                            Price = 359.0m
                        },
                        new
                        {
                            Id = 3,
                            Code = "J461LB",
                            LastUpdated = new DateTimeOffset(new DateTime(2020, 1, 11, 20, 24, 31, 476, DateTimeKind.Unspecified).AddTicks(401), new TimeSpan(0, 3, 0, 0, 0)),
                            Name = "Navy Overcoat",
                            Price = 499.0m
                        },
                        new
                        {
                            Id = 4,
                            Code = "H6049",
                            LastUpdated = new DateTimeOffset(new DateTime(2020, 1, 11, 20, 24, 31, 476, DateTimeKind.Unspecified).AddTicks(405), new TimeSpan(0, 3, 0, 0, 0)),
                            Name = "Light Blue Stripe Shirt",
                            Price = 99.0m
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
